# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

appName: "onix"
log:
  level: debug
  destinations:
    - type: stdout
  contextKeys:
    - transaction_id
    - message_id
    - subscriber_id
    - module_id
http:
  port: 8080
  timeout:
    read: 30
    write: 30
    idle: 30
pluginManager:
  root: /app/plugins
  remoteRoot: /mnt/gcs/plugins/plugins_bundle.zip
modules:
  {% if deploy_bap %}
  - name: bapTxnReceiver
    path: /bap/receiver/
    handler:
      type: std
      role: bap
      registryUrl: {{ registry_url }}
      plugins:
        {% if adapter.enable_schema_validation %}
        schemaValidator:
          id: schemavalidator
          config:
            schemaDir: /mnt/gcs/configs/schemas
        {% endif %}
        keyManager:
          id: inmemorysecretkeymanager
          config:
            projectID: {{ project_id }}
            privateKeyCacheTTLSeconds: 5
            publicKeyCacheTTLSeconds: 3600
        cache:
          id: rediscache
          config:
            addr: {{ redis_instance_ip }}:6379
        signValidator:
          id: signvalidator
        publisher:
          id: pubsubpublisher
          config:
            project: {{ project_id }}
            topics: {{ adapter_topic_name }}
        router:
          id: router
          config:
            routingConfig: /mnt/gcs/configs/bapTxnReceiver-routing.yaml
        middleware:
          - id: reqpreprocessor
            config:
              contextKeys: transaction_id,message_id
              role: bap
      steps:
        - validateSign
        - addRoute
        {% if adapter.enable_schema_validation %}
        - validateSchema
        {% endif %}
  - name: bapTxnCaller
    path: /bap/caller/
    handler:
      type: std
      registryUrl: {{ registry_url }}
      role: bap
      plugins:
        {% if adapter.enable_schema_validation %}
        schemaValidator:
          id: schemavalidator
          config:
            schemaDir: /mnt/gcs/configs/schemas
        {% endif %}
        keyManager:
          id: inmemorysecretkeymanager
          config:
            projectID: {{ project_id }}
            privateKeyCacheTTLSeconds: 5
            publicKeyCacheTTLSeconds: 3600
        cache:
          id: rediscache
          config:
            addr: {{ redis_instance_ip }}:6379
        signer:
          id: signer
        publisher:
          id: pubsubpublisher
          config:
            project: {{ project_id }}
            topics: {{ adapter_topic_name }}
        router:
          id: router
          config:
            routingConfig: /mnt/gcs/configs/bapTxnCaller-routing.yaml
        middleware:
          - id: reqpreprocessor
            config:
              contextKeys: transaction_id,message_id
              role: bap
      steps:
        - addRoute
        - sign
        {% if adapter.enable_schema_validation %}
        - validateSchema
        {% endif %}
  {% endif %}
  {% if deploy_bpp %}
  - name: bppTxnReceiver
    path: /bpp/receiver/
    handler:
      type: std
      role: bpp
      registryUrl: {{ registry_url }}
      plugins:
        {% if adapter.enable_schema_validation %}
        schemaValidator:
          id: schemavalidator
          config:
            schemaDir: /mnt/gcs/configs/schemas
        {% endif %}
        keyManager:
          id: inmemorysecretkeymanager
          config:
            projectID: {{ project_id }}
            privateKeyCacheTTLSeconds: 5
            publicKeyCacheTTLSeconds: 3600
        cache:
          id: rediscache
          config:
            addr: {{ redis_instance_ip }}:6379
        signValidator:
          id: signvalidator
        publisher:
          id: pubsubpublisher
          config:
            project: {{ project_id }}
            topics: {{ adapter_topic_name }}
        router:
          id: router
          config:
            routingConfig: /mnt/gcs/configs/bppTxnReceiver-routing.yaml
        middleware:
          - id: reqpreprocessor
            config:
              contextKeys: transaction_id,message_id
              role: bpp
      steps:
        - validateSign
        - addRoute
        {% if adapter.enable_schema_validation %}
        - validateSchema
        {% endif %}
  - name: bppTxnCaller
    path: /bpp/caller/
    handler:
      type: std
      role: bpp
      registryUrl: {{ registry_url }}
      plugins:
        {% if adapter.enable_schema_validation %}
        schemaValidator:
          id: schemavalidator
          config:
            schemaDir: /mnt/gcs/configs/schemas
        {% endif %}
        keyManager:
          id: inmemorysecretkeymanager
          config:
            projectID: {{ project_id }}
            privateKeyCacheTTLSeconds: 5
            publicKeyCacheTTLSeconds: 3600
        cache:
          id: rediscache
          config:
            addr: {{ redis_instance_ip }}:6379
        signer:
          id: signer
        publisher:
          id: pubsubpublisher
          config:
            project: {{ project_id }}
            topics: {{ adapter_topic_name }}
        router:
          id: router
          config:
            routingConfig: /mnt/gcs/configs/bppTxnCaller-routing.yaml
        middleware:
          - id: reqpreprocessor
            config:
              contextKeys: transaction_id,message_id
              role: bpp
      steps:
        - addRoute
        - sign
        {% if adapter.enable_schema_validation %}
        - validateSchema
        {% endif %}
  {% endif %}